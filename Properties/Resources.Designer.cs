//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WetterdatenAnalyse2020.Properties
{
    using System;


    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WetterdatenAnalyse2020.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///
        ///
        ///
        ///                              Hauptmenü
        ///
        ///                   (1) Wetterdaten verwalten
        ///                   (2) Wetterdaten anzeigen
        ///                   (3) Wetterdaten auswerten
        ///                   (4) Wetterdaten importieren
        ///                   (5) Wetterdaten exportieren
        ///                   (C) Konfigurieren
        ///                   (X) Programm beenden ähnelt.
        /// </summary>
        internal static string Hauptmenue
        {
            get
            {
                return ResourceManager.GetString("Hauptmenue", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///
        ///
        ///
        ///                         Wetterdaten verwalten
        ///
        ///                   (1) Wetterdaten hinzufügen
        ///                   (2) Wetterdaten bearbeiten
        ///                   (3) Wetterdaten löschen
        ///                   (4) zurück ähnelt.
        /// </summary>
        internal static string MenueWetterdatenVerwalten
        {
            get
            {
                return ResourceManager.GetString("MenueWetterdatenVerwalten", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///
        ///
        ///
        ///
        ///
        ///                         Wetterdatenanalyse 1.0
        ///              
        ///             Programm zur Analyse von Wetterdaten für ein Jahr
        ///
        ///             Autor:   Thorsten Meyer   2020
        ///
        ///             Das Programm verwaltet und analysiert Wetterdaten z.B.
        ///             
        ///             Luftdruck, Temperatur und Luftfeuchtigkeit
        ///
        ///             Es liefert den Durchschnittswert der entsprechenden Werte
        ///
        ///             Das Programm startet in 6 sek. ähnelt.
        /// </summary>
        internal static string Splashinfo
        {
            get
            {
                return ResourceManager.GetString("Splashinfo", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Datum;Temperatur [°C];Luftdruck [hPa];Luftfeuchtigkeit [%]
        ///01.01.2020;23,70;760;35
        ///02.01.2020;24,70;762;37
        ///03.01.2020;25,70;764;39
        ///04.01.2020;26,70;766;41
        ///05.01.2020;27,70;768;43
        ///06.01.2020;28,70;770;45
        ///07.01.2020;29,70;772;47
        ///08.01.2020;30,70;774;49
        ///09.01.2020;31,70;776;51
        ///10.01.2020;32,70;778;53
        ///11.01.2020;33,70;780;55
        ///12.01.2020;34,70;782;57
        ///13.01.2020;35,70;784;59
        ///14.01.2020;36,70;786;61
        ///15.01.2020;37,70;788;63
        ///16.01.2020;38,70;790;65
        ///17.01.2020;39,70;792;67
        ///18.01.2020;40,70;794;69
        ///19 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string test
        {
            get
            {
                return ResourceManager.GetString("test", resourceCulture);
            }
        }

        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Datum;Temperatur [°C];Luftdruck [hPa];Luftfeuchtigkeit [%]
        ///01.01.2020;23,70;760;35
        ///02.01.2020;24,70;762;37
        ///03.01.2020;25,70;764;39
        ///04.01.2020;26,70;766;41
        ///05.01.2020;27,70;768;43
        ///06.01.2020;28,70;770;45
        ///07.01.2020;29,70;772;47
        ///08.01.2020;30,70;774;49
        ///09.01.2020;31,70;776;51
        ///10.01.2020;32,70;778;53
        ///11.01.2020;33,70;780;55
        ///12.01.2020;34,70;782;57
        ///13.01.2020;35,70;784;59
        ///14.01.2020;36,70;786;61
        ///15.01.2020;37,70;788;63
        ///16.01.2020;38,70;790;65
        ///17.01.2020;39,70;792;67
        ///18.01.2020;40,70;794;69
        ///19 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string test1
        {
            get
            {
                return ResourceManager.GetString("test1", resourceCulture);
            }
        }
    }
}
